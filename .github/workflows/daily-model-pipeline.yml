name: Daily Model Training and Prediction

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  run-model-pipeline:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter nbconvert pandas numpy boto3 requests matplotlib seaborn scikit-learn==1.3.2 shap python-dotenv
          
      - name: Update Jupyter notebooks
        run: |
          # First ensure numpy is imported in both files
          sed -i '/import pandas as pd/a import numpy as np' model_train.ipynb
          sed -i '/import pandas as pd/a import numpy as np' prediction.ipynb
          
          # Then fix mean_squared_error calls
          sed -i 's/mean_squared_error(y_test, y_pred, squared=False)/np.sqrt(mean_squared_error(y_test, y_pred))/g' model_train.ipynb
          sed -i 's/mean_squared_error(y_test, y_pred, squared=False)/np.sqrt(mean_squared_error(y_test, y_pred))/g' prediction.ipynb
          
      - name: Run model training
        run: |
          jupyter nbconvert --to script model_train.ipynb
          python model_train.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Run prediction
        run: |
          jupyter nbconvert --to script prediction.ipynb
          python prediction.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}